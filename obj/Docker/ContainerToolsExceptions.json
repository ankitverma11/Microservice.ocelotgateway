[{"ContainerToolsException.Message":"Visual Studio Container Tools requires Docker to be running before building, debugging or running a containerized project.  For more info, please see: https://aka.ms/DockerToolsTroubleshooting","ContainerToolsException.ErrorCode":"","ContainerToolsException.StackTrace":"","ContainerToolsException.HResult":"-2146233088","ContainerToolsException.InnerException":"Microsoft.VisualStudio.Containers.Tools.Common.ContainerToolsException: \u001b[1mTo get more help with docker, check out our guides at https://docs.docker.com/go/guides/\u001b[0m\n   at Microsoft.Docker.DockerComposeClient.ExecuteAsync(String options, String commandWithArguments, IDockerLogger logger, CancellationToken cancellationToken)\n   at Microsoft.Docker.DockerComposeClient.MergedDockerComposeDocument.GetContentsFromDockerComposeConfigAsync(CachedComposeConfigFilePaths cachedFilePaths, String hashOfFilesToBeMerged, Func`3 executeCommandAsync)\n   at Microsoft.Docker.DockerComposeClient.MergedDockerComposeDocument.EnsureContentsExistAsync(Func`3 executeCommandAsync)\n   at Microsoft.Docker.DockerComposeClient.MergedDockerComposeDocument.GetDockerComposeDocumentAsync(Func`3 executeCommandAsync)\n   at Microsoft.Docker.DockerComposeClient.GetDockerComposeDocumentAsync(DockerComposeFileSet composeFileSet, DockerDevelopmentMode dockerDevelopmentMode, IDockerLogger logger, CancellationToken cancellationToken)\n   at Microsoft.Docker.DockerWorkspace.GetDockerServiceProfilesAsync(DockerDevelopmentMode dockerDevelopmentMode, IDockerLogger logger, CancellationToken cancellationToken)\n   at Microsoft.Docker.BuildTasks.GetServiceReferences.ExecuteCoreAsync(DockerBuildTaskContext context)\n   at Microsoft.Docker.BuildTasks.DockerBuildTask.ExecuteAsync(DockerBuildTaskContext context)\nError code: DT1001\nSeverity: Error\nCommand line: docker-compose  -f \"/Users/ankitkumar/Projects/Microservice.ocelotgateway/docker-compose.yml\" -f \"/Users/ankitkumar/Projects/Microservice.ocelotgateway/docker-compose.override.yml\" -p dockercompose5849798760758209984 --ansi never --profile \"*\" config\nCommand exit code: 125\nCommand output: \nCommand error: unknown shorthand flag: 'f' in -f\nSee 'docker --help'.\nUsage:  docker [OPTIONS] COMMAND\nA self-sufficient runtime for containers\nOptions:\n      --config string      Location of client config files (default\n                           \"/Users/ankitkumar/.docker\")\n  -c, --context string     Name of the context to use to connect to the\n                           daemon (overrides DOCKER_HOST env var and\n                           default context set with \"docker context use\")\n  -D, --debug              Enable debug mode\n  -H, --host list          Daemon socket(s) to connect to\n  -l, --log-level string   Set the logging level\n                           (\"debug\"|\"info\"|\"warn\"|\"error\"|\"fatal\")\n                           (default \"info\")\n      --tls                Use TLS; implied by --tlsverify\n      --tlscacert string   Trust certs signed only by this CA (default\n                           \"/Users/ankitkumar/.docker/ca.pem\")\n      --tlscert string     Path to TLS certificate file (default\n                           \"/Users/ankitkumar/.docker/cert.pem\")\n      --tlskey string      Path to TLS key file (default\n                           \"/Users/ankitkumar/.docker/key.pem\")\n      --tlsverify          Use TLS and verify the remote\n  -v, --version            Print version information and quit\nManagement Commands:\n  builder     Manage builds\n  config      Manage Docker configs\n  container   Manage containers\n  context     Manage contexts\n  image       Manage images\n  manifest    Manage Docker image manifests and manifest lists\n  network     Manage networks\n  node        Manage Swarm nodes\n  plugin      Manage plugins\n  secret      Manage Docker secrets\n  service     Manage services\n  stack       Manage Docker stacks\n  swarm       Manage Swarm\n  system      Manage Docker\n  trust       Manage trust on Docker images\n  volume      Manage volumes\nCommands:\n  attach      Attach local standard input, output, and error streams to a running container\n  build       Build an image from a Dockerfile\n  commit      Create a new image from a container's changes\n  cp          Copy files/folders between a container and the local filesystem\n  create      Create a new container\n  diff        Inspect changes to files or directories on a container's filesystem\n  events      Get real time events from the server\n  exec        Run a command in a running container\n  export      Export a container's filesystem as a tar archive\n  history     Show the history of an image\n  images      List images\n  import      Import the contents from a tarball to create a filesystem image\n  info        Display system-wide information\n  inspect     Return low-level information on Docker objects\n  kill        Kill one or more running containers\n  load        Load an image from a tar archive or STDIN\n  login       Log in to a Docker registry\n  logout      Log out from a Docker registry\n  logs        Fetch the logs of a container\n  pause       Pause all processes within one or more containers\n  port        List port mappings or a specific mapping for the container\n  ps          List containers\n  pull        Pull an image or a repository from a registry\n  push        Push an image or a repository to a registry\n  rename      Rename a container\n  restart     Restart one or more containers\n  rm          Remove one or more containers\n  rmi         Remove one or more images\n  run         Run a command in a new container\n  save        Save one or more images to a tar archive (streamed to STDOUT by default)\n  search      Search the Docker Hub for images\n  start       Start one or more stopped containers\n  stats       Display a live stream of container(s) resource usage statistics\n  stop        Stop one or more running containers\n  tag         Create a tag TARGET_IMAGE that refers to SOURCE_IMAGE\n  top         Display the running processes of a container\n  unpause     Unpause all processes within one or more containers\n  update      Update configuration of one or more containers\n  version     Show the Docker version information\n  wait        Block until one or more containers stop, then print their exit codes\nRun 'docker COMMAND --help' for more information on a command.\n\u001b[1mTo get more help with docker, check out our guides at https://docs.docker.com/go/guides/\u001b[0m\n"}]